// // Helper Mixin for the containers
$step-col-grid-gap: 32px;
$step-row-grid-gap: 24px;

@mixin step-template($areas) {
  // Overwritable gaps
  $step-col-grid-gap: 32px !default;
  $step-row-grid-gap: 24px !default;

  grid-gap: $step-col-grid-gap;
  grid-row-gap: $step-row-grid-gap;
  grid-template: template-areas($areas);
}

@function template-areas($areas) {
  $grid-template-value: null;
  @for $i from 1 through length($areas) {
    $area: nth($areas, $i);

    $row-height: 312px !default;
    $row-small-height: 110px !default;

    // Append the given area
    $grid-template-value: append($grid-template-value, quote(nth($area, 1)), space);

    // If a value for the row height is set, apply that
    @if (length($area) == 2) {
      $grid-template-value: append($grid-template-value, nth($area, 2), space);
    }
    // If no value given, use default values */
    @else {
      $row-height-to-apply: if($i == 2, $row-small-height, $row-height);
      $grid-template-value: append($grid-template-value, $row-height-to-apply, space);
    }
  }

  // Adding two columns
  $grid-template-value: append($grid-template-value, unquote('/ 1fr 1.5fr'), space);

  @return $grid-template-value;
}

$steps-gutters: (
  small: 10px,
  medium: 40px,
);


#steps {
  .steps {
    display: grid;
    grid-gap: $step-col-grid-gap;
    grid-row-gap: $step-row-grid-gap;
    grid-template-columns: 1fr;
    grid-auto-rows: minmax(312px, auto); // Not supported in IE

    @include breakpoint(large) {
      $areas: ('step_1 step_2' auto),
              ('step_1 step_3' auto);
      @include step-template($areas);

      @for $i from 1 through 3 {
        .step--#{$i} {
          grid-area: unquote("step_" + $i);
        }
      }
    }
  }
}
